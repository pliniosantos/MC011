/* This file was generated by SableCC (http://www.sablecc.org/). */

package minijava.node;

import minijava.analysis.*;

@SuppressWarnings("nls")
public final class AIdexpExp2 extends PExp2
{
    private TId _idExp_;

    public AIdexpExp2()
    {
        // Constructor
    }

    public AIdexpExp2(
        @SuppressWarnings("hiding") TId _idExp_)
    {
        // Constructor
        setIdExp(_idExp_);

    }

    @Override
    public Object clone()
    {
        return new AIdexpExp2(
            cloneNode(this._idExp_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAIdexpExp2(this);
    }

    public TId getIdExp()
    {
        return this._idExp_;
    }

    public void setIdExp(TId node)
    {
        if(this._idExp_ != null)
        {
            this._idExp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._idExp_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._idExp_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._idExp_ == child)
        {
            this._idExp_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._idExp_ == oldChild)
        {
            setIdExp((TId) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
