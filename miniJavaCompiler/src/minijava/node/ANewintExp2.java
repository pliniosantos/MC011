/* This file was generated by SableCC (http://www.sablecc.org/). */

package minijava.node;

import minijava.analysis.*;

@SuppressWarnings("nls")
public final class ANewintExp2 extends PExp2
{
    private TNew _new_;
    private TInt _int_;
    private TLcol _col1_;
    private PExp _intExp_;
    private TRcol _col2_;

    public ANewintExp2()
    {
        // Constructor
    }

    public ANewintExp2(
        @SuppressWarnings("hiding") TNew _new_,
        @SuppressWarnings("hiding") TInt _int_,
        @SuppressWarnings("hiding") TLcol _col1_,
        @SuppressWarnings("hiding") PExp _intExp_,
        @SuppressWarnings("hiding") TRcol _col2_)
    {
        // Constructor
        setNew(_new_);

        setInt(_int_);

        setCol1(_col1_);

        setIntExp(_intExp_);

        setCol2(_col2_);

    }

    @Override
    public Object clone()
    {
        return new ANewintExp2(
            cloneNode(this._new_),
            cloneNode(this._int_),
            cloneNode(this._col1_),
            cloneNode(this._intExp_),
            cloneNode(this._col2_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANewintExp2(this);
    }

    public TNew getNew()
    {
        return this._new_;
    }

    public void setNew(TNew node)
    {
        if(this._new_ != null)
        {
            this._new_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._new_ = node;
    }

    public TInt getInt()
    {
        return this._int_;
    }

    public void setInt(TInt node)
    {
        if(this._int_ != null)
        {
            this._int_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._int_ = node;
    }

    public TLcol getCol1()
    {
        return this._col1_;
    }

    public void setCol1(TLcol node)
    {
        if(this._col1_ != null)
        {
            this._col1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._col1_ = node;
    }

    public PExp getIntExp()
    {
        return this._intExp_;
    }

    public void setIntExp(PExp node)
    {
        if(this._intExp_ != null)
        {
            this._intExp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._intExp_ = node;
    }

    public TRcol getCol2()
    {
        return this._col2_;
    }

    public void setCol2(TRcol node)
    {
        if(this._col2_ != null)
        {
            this._col2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._col2_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._new_)
            + toString(this._int_)
            + toString(this._col1_)
            + toString(this._intExp_)
            + toString(this._col2_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._new_ == child)
        {
            this._new_ = null;
            return;
        }

        if(this._int_ == child)
        {
            this._int_ = null;
            return;
        }

        if(this._col1_ == child)
        {
            this._col1_ = null;
            return;
        }

        if(this._intExp_ == child)
        {
            this._intExp_ = null;
            return;
        }

        if(this._col2_ == child)
        {
            this._col2_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._new_ == oldChild)
        {
            setNew((TNew) newChild);
            return;
        }

        if(this._int_ == oldChild)
        {
            setInt((TInt) newChild);
            return;
        }

        if(this._col1_ == oldChild)
        {
            setCol1((TLcol) newChild);
            return;
        }

        if(this._intExp_ == oldChild)
        {
            setIntExp((PExp) newChild);
            return;
        }

        if(this._col2_ == oldChild)
        {
            setCol2((TRcol) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
